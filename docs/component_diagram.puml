@startuml C4 Component Diagram: User Interface
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml


LAYOUT_WITH_LEGEND()
LAYOUT_LEFT_RIGHT()


Person(user, "User", "Manages the tools")

System(gromokoso, "GroMoKoSo") {
    Container(userInterface, "User-Interface", "React", "Displays content to users") {
        Component(router, "Router", "React Router", "Handles navigation and routing between pages")
        Component(app, "App", "React Component", "Main application component")

        Boundary(pages, "Pages", "React Page Components") {
            Component(homePage, "/dashboard", "React Component", "Displays the home page content")
            Component(loginPage, "/login", "React Component", "Displays the login form")
            Component(myProfilePage, "/me", "React Component", "Displays the user's profile information")
            
            Boundary(userPages, "User Pages", "React Page Components") {
                Component(users, "/users", "React Component", "Displays the list of users")
                Component(userDetails, "/users/:id", "React Component", "Displays profile of a specific user")
            }

            Boundary(groupsPages, "Groups Pages", "React Page Components") {
                Component(groups, "/groups", "React Component", "Displays the list of groups")
                Component(groupsPublic, "/groups/public", "React Component", "Displays the list of public groups")
                Component(groupDetails, "/groups/:id", "React Component", "Displays profile of a specific group")
            }

            Boundary(apisPages, "APIs Pages", "React Page Components") {
                Component(apis, "/apis", "React Component", "Displays the list of APIs")
                Component(apiDetails, "/apis/:id", "React Component", "Displays details of a specific API")
            }    

        }

        Boundary(utils, "Utils", "Utility & API Code") {
            Component(apiHelper, "apiHelper", "TS Utility Module", "Provides helper functions for API communication")
            'Component(httpClient, "HTTP Client", "Axios", "Handles HTTP requests to the CMS")
        }
    }
    Container(apiManagement, "Api-Management", "Java SpringBoot", "Manages the api's")
    Container(userManagement, "User-Management", "Java SpringBoot", "Manages the Users")
}

AddRelTag("white", $textColor="white", $lineColor="white")


Rel(user, userInterface, "uses")

Rel(app, router, "Routes to")
Rel(router, pages, "Routes to")
Rel(pages, apiHelper, "Fetches or posts content")

Rel(apiHelper, apiManagement, "uses", "REST", $tags='white') 
Rel(apiHelper, userManagement, "uses", "REST", $tags='white')


@enduml